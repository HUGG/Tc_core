name: Make release using version tag
on:
  push:
    tags:
      - "v*"
jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      # Set fail-fast to false to ensure that feedback is delivered for all matrix combinations. Consider changing this to true when your workflow is stable.
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest]
        build_type: [Release]
        c_compiler: [gcc, clang]
        include:
          - os: windows-latest
            c_compiler: gcc
            cpp_compiler: g++
          - os: ubuntu-latest
            c_compiler: gcc
            cpp_compiler: g++
          - os: ubuntu-latest
            c_compiler: clang
            cpp_compiler: clang++
        exclude:
          - os: windows-latest
            c_compiler: clang
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
      - name: Set reusable strings
        # Turn repeated input strings (such as the build output directory) into step outputs. These step outputs can be used throughout the workflow file.
        id: strings
        shell: bash
        run: |
          echo "build-output-dir=build" >> "$GITHUB_OUTPUT"
      - name: CMake configure (Windows)
        if: matrix.os == 'windows-latest'
        run: >
          cmake -B ${{ steps.strings.outputs.build-output-dir }}
          -G "MinGW Makefiles"
          -DCMAKE_CXX_COMPILER=${{ matrix.cpp_compiler }}
          -DCMAKE_C_COMPILER=${{ matrix.c_compiler }}
          -DCMAKE_BUILD_TYPE=${{ matrix.build_type }}
          -S src
      - name: CMake configure (Linux)
        if: matrix.os == 'ubuntu-latest'
        run: >
          cmake -B ${{ steps.strings.outputs.build-output-dir }}
          -DCMAKE_CXX_COMPILER=${{ matrix.cpp_compiler }}
          -DCMAKE_C_COMPILER=${{ matrix.c_compiler }}
          -DCMAKE_BUILD_TYPE=${{ matrix.build_type }}
          -S src
      - name: CMake build
        run: cmake --build ${{ steps.strings.outputs.build-output-dir }} --config ${{ matrix.build_type }}
      - name: CMake install
        run: |
          mkdir bin
          cmake --install ${{ steps.strings.outputs.build-output-dir }} --prefix bin --config ${{ matrix.build_type }}
      - name: Rename bin directory
        working-directory: ./
        run: mv bin/bin bin-${{ matrix.os }}-${{ matrix.c_compiler }}
      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: tc_core-${{ matrix.os }}-${{ matrix.c_compiler }}
          path: bin-${{ matrix.os }}-${{ matrix.c_compiler }}
  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download Artifacts
        uses: actions/download-artifact@v4
      - name: SHOW MY STUFF
        run: |
          ls -la
          pwd
          ls -l tc_core-ubuntu-latest-clang/bin
          ls -l tc_core-ubuntu-latest-gcc/bin
          ls -l tc_core-windows-latest-gcc/bin
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: tc_core-*
          tag_name: ${{ github.ref_name }}
          body: "Automated release of ${{ github.ref_name }}."
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
